set(C_SOURCES
sg_apple_unicode.c
sg_attributes.c
sg_audit.c
sg_bitvec.c
sg_blob_sqlite__io.c
sg_blob_sqlite__sql.c
sg_blob_sqlite__stream.c
sg_changeset.c
sg_client.c
sg_client__api.c
sg_client_vtable__c.c
sg_client_vtable__http.c
sg_closet.c
sg_committing.c
sg_console.c
sg_context.c
sg_dag_sqlite3.c
sg_dagfrag.c
sg_daglca.c
sg_dagnode.c
sg_dagnum.c
sg_dagquery.c
sg_dagwalker.c
sg_dbndx.c
sg_dbcriteria.c
sg_dbrecord.c
sg_diff_ext.c
sg_diff_utils.c
sg_diffcore.c
sg_dir.c
sg_error.c
sg_exec.c
sg_exec_argvec.c
sg_file.c
sg_file_spec.c
sg_fragball.c
sg_fsobj.c
sg_getopt.c
sg_gid.c
sg_hex.c
sg_history.c
sg_inv_tree.c
sg_jsglue.c
sg_jsondb.c
sg_jsonparser.c
sg_jsonwriter.c
sg_lib.c
sg_libcurl.c
sg_localsettings.c
sg_logging.c
sg_malloc.c
sg_misc_utils.c
sg_mrg.c
sg_mutex.c
sg_pathname.c
sg_parents.c
sg_pendingdb.c
sg_pendingtree.c
sg_portability.c
sg_pull.c
sg_push.c
sg_random.c
sg_rbtree.c
sg_repo.c
sg_repo__bind_vtables.c
sg_repo__private_utils.c
sg_repo_tx__sqlite.c
sg_repo_vtable__fs2.c
sg_repo_vtable__fs3.c
sg_repo_vtable__sqlite.c
sg_repopath.c
sg_repo_misc.c
sg_repo_pack.c
sg_js_safeptr.c
sg_server.c
sg_sqlite.c
sg_staging.c
sg_status_formatter.c
sg_str_utils.c
sg_stream.c
sg_string.c
sg_stringarray.c
sg_strpool.c
sg_sync.c
sg_tag.c
sg_tempfile.c
sg_tid.c
sg_time.c
sg_treediff2.c
sg_treendx.c
sg_treenode.c
sg_treenode_entry.c
sg_unzip.c
sg_uridispatch.c
sg_uridispatch_activity.c
sg_uridispatch_browsefs.c
sg_uridispatch_history.c
sg_uridispatch_private.c
sg_uridispatch_status.c
sg_uridispatch_sync.c
sg_uridispatch_todo.c
sg_uridispatch_ui.c
sg_uridispatch_withistory.c
sg_user.c
sg_utf8.c
sg_variant.c
sg_varpool.c
sg_varray.c
sg_vc_comments.c
sg_vc_stamps.c
sg_vc_tags.c
sg_vcdiff.c
sg_vector.c
sg_vector_i64.c
sg_vfile.c
sg_vhash.c
sg_wd_plan.c
sg_web_utils.c
sg_workingdir.c
sg_xmlwriter.c
sg_zing.c
sg_zing_init.c
sg_zing_jsglue.c
sg_zing_merge.c
sg_zing_sort.c
sg_zing_template.c
sg_zing_uniqify.c
sg_zing_where.c
sg_zip.c
)

file(GLOB PRIVATE_HEADERS ./*.h)
file(GLOB HEADERS ../include/*.h)

set(ALL_SOURCE ${C_SOURCES} ${HEADERS} ${PRIVATE_HEADERS})

source_group("Private Headers" FILES ${PRIVATE_HEADERS})
source_group("Header Files" FILES ${HEADERS})

add_library(sglib STATIC ${ALL_SOURCE})
target_link_libraries(sglib sghash sgtemplates ${SG_THIRDPARTY_LIBRARIES} ${SG_OS_LIBS})

