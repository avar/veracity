/* A simple test. */
{
	"commands" :
	[
		/* Create 2 repositories: r1 and r1_dup. */

		{	"cmd" : "create_new_repo",	"repo" : "r1",	"pathname" : "./repo"	},
		{	"cmd" : "clone_repo",		"repo" : "r1",	"repodest" : "r1_dup"	},

		/* Make an initial commit "i1" in "r1". */

		{	"cmd" : "set_current_repo",	"repo" : "r1"	},
		{	"cmd" : "initial_commit",	"name" : "i1"	},

		/* Then make a linear series of commits from "i1":
		**
		** [null] <--- i1 <--- c2 <--- ... <--- c10
		**
		** Along the way assert that we only have one leaf.
		*/

		{	"cmd" : "commit_linear", 
				"pattern" : "c%d",
				"start" : 2,
				"count" : 9,
				"parent" : "i1"	},

		{	"cmd" : "assert_leaves",	"leaves" : [ "c10" ]		},

		/* Then make other linear series from "i1":
		**
		** [null] <--- i1 <--- c2 <--- ... <--- c10
		**              |
		**              + <--- d2 <--- ... <--- d10
		**              |
		**              + <--- e2 <--- ... <--- e10
		*/

		{	"cmd" : "commit_linear", 
				"pattern" : "d%d",
				"start" : 2,
				"count" : 9,
				"parent" : "i1"	},

		{	"cmd" : "commit_linear", 
				"pattern" : "e%d",
				"start" : 2,
				"count" : 9,
				"parent" : "i1"	},

		{	"cmd" : "assert_leaves",	"leaves" : [ "c10", "d10", "e10" ]	},

		/* Merge 2 nodes and verify that things went well.
		**
		** [null] <--- i1 <--- c2 <--- ... <--- c10 <-+- m11 <-+- m12
		**              |                             |        |
		**              + <--- d2 <--- ... <--- d10 <-+        |
		**              |                                      |
		**              + <--- e2 <--- ... <--- e10 <----------+
		*/

		{	"cmd" : "merge2",
				"name" : "m11",
				"parent" : "c10",
				"parent2" : "d10"
				},
		{	"cmd" : "assert_leaves",	"leaves" : [ "m11", "e10" ]	},

		{	"cmd" : "merge2",
				"name" : "m12",
				"parent" : "m11",
				"parent2" : "e10"
				},
		{	"cmd" : "assert_leaves",	"leaves" : [ "m12" ]	},

		/* Try to push from "m12" into the empty "r1_dup" with various
		** depths and verify the connectivity issues.
		*/

		{	"cmd" : "push_dagfrag",
				"repo" : "r1",		"repodest" : "r1_dup",
				"leaves" : [ "m12" ],
				"generations" : 1,
				"expect_fail_disconnected" : [ "m11", "e10" ]
			},

		{	"cmd" : "push_dagfrag",
				"repo" : "r1",		"repodest" : "r1_dup",
				"leaves" : [ "m12" ],
				"generations" : 2,
				"expect_fail_disconnected" : [ "c10", "d10", "e10" ]
			},

		/* Try to push from a node in the middle of the graph into the 
		** empty "r1_dup" with various depths and verify the connectivity issues.
		*/

		{	"cmd" : "push_dagfrag",
				"repo" : "r1",		"repodest" : "r1_dup",
				"leaves" : [ "c8", "d8", "e8" ],
				"generations" : 1,
				"expect_fail_disconnected" : [ "c7", "d7", "e7" ]
			},

		{	"cmd" : "push_dagfrag",
				"repo" : "r1",		"repodest" : "r1_dup",
				"leaves" : [ "c10", "m12" ],
				"generations" : 2,
				"expect_fail_disconnected" : [ "c8", "d10", "e10" ]
			},

		/* Push a series of fragments. These should succeed. */

		{	"cmd" : "push_dagfrag",
				"repo" : "r1",		"repodest" : "r1_dup",
				"leaves" : [ "c4", "d4", "e4" ],
				"generations" : 0
			},
		{	"cmd" : "assert_leaves",	"repo" : "r1_dup",	"leaves" : [ "c4", "d4", "e4" ]	},

		{	"cmd" : "push_dagfrag",
				"repo" : "r1",		"repodest" : "r1_dup",
				"leaves" : [ "c8", "d8" ],
				"generations" : 4
			},
		{	"cmd" : "assert_leaves",	"repo" : "r1_dup",	"leaves" : [ "c8", "d8", "e4" ]	},

		{	"cmd" : "push_dagfrag",
				"repo" : "r1",		"repodest" : "r1_dup",
				"leaves" : [ "m12" ],
				"generations" : 0
			},
		{	"cmd" : "assert_leaves",	"repo" : "r1_dup",	"leaves" : [ "m12" ]	},


		/* Clean up our mess. */

		{	"cmd" : "close_repo",		"repo" : "r1"		},
		{	"cmd" : "close_repo",		"repo" : "r1_dup"	}
	]
}

