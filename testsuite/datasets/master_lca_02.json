/* Test the LCA code. */
{
	"commands" :
	[
		/* Create repository "r1". */

		{	"cmd" : "create_new_repo",	"repo" : "r1",	"pathname" : "./repo"	},
		{	"cmd" : "set_current_repo",	"repo" : "r1"	},

		/* This test is concerned with computing the LCA on
		** relatively simple 2-way branches and merges (and
		** without criss-crosses.
		**
		** Make the following:
		**
		**                [NULL ROOT]
		**                    |
		**                    A
		**                   / \.
		**                  B   C
		**                 /     \.
		**                D       E
		**               / \.
		**              F   G
		**
		*/

		{	"cmd" : "initial_commit",	"name" : "A"	},
		{	"cmd" : "commit",		"name" : "B",	"parent" : "A"	},
		{	"cmd" : "commit",		"name" : "C",	"parent" : "A"	},
		{	"cmd" : "commit",		"name" : "D",	"parent" : "B"	},
		{	"cmd" : "commit",		"name" : "E",	"parent" : "C"	},
		{	"cmd" : "commit",		"name" : "F",	"parent" : "D"	},
		{	"cmd" : "commit",		"name" : "G",	"parent" : "D"	},

		{	"cmd" : "compute_lca",		"leaves" : [ "B", "C" ],	"lca" : "A",	"lca_children" : [ "B", "C" ] },
		{	"cmd" : "compute_lca",		"leaves" : [ "D", "C" ],	"lca" : "A" },
		{	"cmd" : "compute_lca",		"leaves" : [ "B", "E" ],	"lca" : "A" },
		{	"cmd" : "compute_lca",		"leaves" : [ "D", "E" ],	"lca" : "A" },

		{	"cmd" : "compute_lca",		"leaves" : [ "F", "G" ],	"lca" : "D" },
		{	"cmd" : "compute_lca",		"leaves" : [ "F", "E" ],	"lca" : "A" },
		{	"cmd" : "compute_lca",		"leaves" : [ "G", "E" ],	"lca" : "A" },

		{	"cmd" : "compute_lca",		"leaves" : [ "F", "G", "E" ],	"lca" : "A",	"lca_children" : [ "D", "E" ] },

		/* Clean up our mess. */

		{	"cmd" : "close_repo",		"repo" : "r1"	}
	]
}

